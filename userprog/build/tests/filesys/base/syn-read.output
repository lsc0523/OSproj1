Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu -hda /tmp/DLd9AsTx_f.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 233 sectors (116 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
(syn-read) exec child 2 of 10: "child-syn-read 1"
(syn-read) exec child 3 of 10: "child-syn-read 2"
(syn-read) exec child 4 of 10: "child-syn-read 3"
(syn-read) exec child 5 of 10: "child-syn-read 4"
(syn-read) exec child 6 of 10: "child-syn-read 5"
(syn-read) exec child 7 of 10: "child-syn-read 6"
(syn-read) exec child 8 of 10: "child-syn-read 7"
(syn-read) exec child 9 of 10: "child-syn-read 8"
(syn-read) exec child 10 of 10: "child-syn-read 9"
load: child-syn-read: open failed
Page fault at 0xfffffffe: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc00279cc
 cr2=fffffffe error=00000002
 eax=00000031 ebx=00000001 ecx=c0110cc3 edx=00000000
 esi=fffffffe edi=fffffffe esp=00000002 ebp=c0110c40
 cs=0008 ds=0010 es=0010 ss=3a48
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc00284b0 0xc002b8dc 0xc002b984 0xc0021a0d 0xc0021b3f 0xc00279cc 0xc0027b68 0xc002a5e6 0xc002ae3c 0xc002121a.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 248 ticks
Thread: 2 idle ticks, 242 kernel ticks, 4 user ticks
hda2 (filesys): 90 reads, 472 writes
hda3 (scratch): 232 reads, 2 writes
Console: 2177 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
